name: QA Deploy

on:
  push:
    branches:
      - qa

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pull Latest Changes
        run: |
          git pull --rebase origin qa

      - name: Check if merge from main
        id: check_merge
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "msg=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # üéØ main ‚Üí QA: Bump minor version
      - name: Extract Minor Version
        if: contains(steps.check_merge.outputs.msg, 'Merge') && contains(steps.check_merge.outputs.msg, 'main')
        id: version_minor
        run: |
          MAJOR=$(jq -r '.major')
          MINOR=$(( $(jq -r '.minor') + 1 ))
          VERSION="$MAJOR.$MINOR.0"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Minor Version
        if: contains(steps.check_merge.outputs.msg, 'Merge') && contains(steps.check_merge.outputs.msg, 'main')
        run: |
          jq '.minor += 1 | .patch = 0' version.json > version.tmp.json
          mv version.tmp.json version.json
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version.json
          git commit -m "üîÅ Bump minor version to ${{ steps.version_minor.outputs.version }}"
          git push

      # üõ†Ô∏è QA ÎÇ¥Î∂Ä fix: Bump patch version
      - name: Extract Patch Version
        if: ${{ !contains(steps.check_merge.outputs.msg, 'Merge') || !contains(steps.check_merge.outputs.msg, 'main') }}
        id: version_patch
        run: |
          MAJOR=$(jq -r '.major')
          MINOR=$(jq -r '.minor')
          PATCH=$(( $(jq -r '.patch') + 1 ))
          VERSION="$MAJOR.$MINOR.$PATCH"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Patch Version
        if: ${{ !contains(steps.check_merge.outputs.msg, 'Merge') || !contains(steps.check_merge.outputs.msg, 'main') }}
        run: |
          jq '.patch += 1' version.json > version.tmp.json
          mv version.tmp.json version.json
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version.json
          git commit -m "üîÅ Bump patch version to ${{ steps.version_patch.outputs.version }}"
          git push

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push QA Image
        run: |
          VERSION=${{ steps.version_minor.outputs.version || steps.version_patch.outputs.version }}
          IMAGE=${{ secrets.DOCKER_USERNAME }}/nextjs-app
          docker build -f Dockerfile --build-arg ENV_MODE=development \
            -t $IMAGE:qa-${VERSION} \
            -t $IMAGE:qa-latest .
          docker push $IMAGE:qa-${VERSION}
          docker push $IMAGE:qa-latest
