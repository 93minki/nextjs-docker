name: QA Deploy

on:
  push:
    branches:
      - qa

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Branch Info
        id: branch
        run: |
          echo "head_ref=${GITHUB_HEAD_REF}" >> $GITHUB_OUTPUT
          echo "ref_name=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Copy .env.development -> .env
        run: |
          cp .env.development .env

      - name: Create .env.development
        run: |
          echo "GIST_TOKEN=${{ secrets.GIST_TOKEN }}" >> .env
          echo "GIST_URL=${{ secrets.GIST_URL }}" >> .env

      # ‚úÖ main ‚Üí qa Î®∏ÏßÄÏùº Í≤ΩÏö∞ ÎßàÏù¥ÎÑà Î≤ÑÏ†Ñ Ï¶ùÍ∞Ä
      - name: Bump minor version
        if: ${{ steps.branch.outputs.ref_name == 'qa' && steps.branch.outputs.head_ref == 'main' }}
        run: |
          jq '.minor += 1 | .patch = 0' version.json > version.tmp.json
          mv version.tmp.json version.json
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version.json
          git commit -m "üîÅ Bump minor version"
          git push

      # ‚úÖ Í∑∏ Ïô∏ (qa ÏûêÏ≤¥ Ïª§Î∞ã) ‚Üí Ìå®Ïπò Î≤ÑÏ†Ñ Ï¶ùÍ∞Ä
      - name: Bump patch version
        if: ${{ !(steps.branch.outputs.ref_name == 'qa' && steps.branch.outputs.head_ref == 'main') }}
        run: |
          jq '.patch += 1' version.json > version.tmp.json
          mv version.tmp.json version.json
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version.json
          git commit -m "üîÅ Bump patch version"
          git push

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push QA Image
        run: |
          VERSION=$(jq -r '.major').$(jq -r '.minor').$(jq -r '.patch')
          IMAGE=${{ secrets.DOCKER_USERNAME }}/nextjs-app
          docker build -f Dockerfile \
            -t $IMAGE:qa-${VERSION} \
            -t $IMAGE:qa-latest .
          docker push $IMAGE:qa-${VERSION}
          docker push $IMAGE:qa-latest
